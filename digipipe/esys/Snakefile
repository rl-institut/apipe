import os

scenario_groups = {
    "all-scenarios": [
        os.path.splitext(scenario)[0] for scenario in os.listdir("esys/scenarios")
    ]
}

# Include rules for intermediate steps
include: "snakemake_rules/build_datapackage.smk"
include: "snakemake_rules/prepare_resource.smk"
include: "snakemake_rules/optimization.smk"
include: "snakemake_rules/postprocessing.smk"
include: "snakemake_rules/create_empty_scalars.smk"
include: "snakemake_rules/create_empty_ts.smk"
include: "snakemake_rules/write_default_scalars.smk"

rule make_esys_appdata:
    """
    Create esys datapackage for the app from esys raw data
    """
    input:
        plots=expand(
            "store/appdata/esys/{scenario}/preprocessed",
            scenario=scenario_groups["all-scenarios"]
        )

# TODO: To be deleted with issue 52 resolve
rule postprocessed_esys_appdata:
    input:
        plots=expand(
            "store/appdata/esys/{scenario}/postprocessed",
            scenario=scenario_groups["all-scenarios"]
        )
