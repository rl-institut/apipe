# -*- coding: utf-8 -*-
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys
import sphinx_material
from unittest.mock import MagicMock

# sys.path.insert(0, os.path.abspath('..'))

# Add stemp tool to path:
DIGIPIPE_ROOT = os.path.dirname(os.path.dirname(os.path.dirname(__file__)))
sys.path.append(DIGIPIPE_ROOT)


# -- Module mocking required for RTD -----------------------------------------
class Mock(MagicMock):
    @classmethod
    def __getattr__(cls, name):
        return MagicMock()


MOCK_MODULES = []

if "READTHEDOCS" in os.environ:
    # Mock modules not available in RTD-build container:
    sys.modules.update((mod_name, Mock()) for mod_name in MOCK_MODULES)


project = "digipipe"
copyright = "2022, Reiner Lemoine Institut"
author = "Reiner Lemoine Institut"

# The short X.Y version
version = "0.0.1dev"
# The full version, including alpha/beta/rc tags
release = "0.0.1dev"


# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.viewcode",
    "sphinx.ext.napoleon",
    "sphinx.ext.extlinks",
    "sphinx.ext.graphviz",
    "m2r2",
]

# source_suffix = '.rst'
source_suffix = [".rst", ".md"]

# Napoleon settings
napoleon_google_docstring = True
napoleon_numpy_docstring = True
napoleon_include_init_with_doc = False
napoleon_include_private_with_doc = False
napoleon_include_special_with_apidoc = False
napoleon_use_admonition_for_examples = False
napoleon_use_admonition_for_notes = False
napoleon_use_admonition_for_references = False
napoleon_use_ivar = False
napoleon_use_param = True
napoleon_use_rtype = True
napoleon_use_keyword = False

# Dictionary of external links
extlinks = {
    "pandas": (
        "https://pandas.pydata.org/pandas-docs/stable/reference/api/%s.html",
        "",
    )
}

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = ".rst"

# The master toctree document.
master_doc = "index"

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
# = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path .
exclude_patterns = ["_build", "Thumbs.db", ".DS_Store", "whatsnew/*", "files/*"]

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
extensions.append("sphinx_material")
html_theme_path = sphinx_material.html_theme_path()
html_context = sphinx_material.get_html_context()
html_theme = "sphinx_material"
html_logo = "img/logos/RLI_DigiPlan_logos_horizontal.png"


# material theme options (see theme.conf for more information)
html_theme_options = {
    "repo_url": "https://github.com/rl-institut-private/digipipe",
    "repo_name": "See source code on GitHub",
    "html_minify": False,
    "html_prettify": True,
    "css_minify": True,
    # "logo_icon": "&#xe869",
    "repo_type": "github",
    "color_primary": "blue-grey",
    # "color_accent": "orange",
    "globaltoc_depth": 3,
    # "touch_icon": "img/logos/digiplan-logo-horizontal.png",
    "theme_color": "002C50",
    "master_doc": False,
    "nav_links": [
        {"href": "index", "internal": True, "title": "digipipe"},
        {
            "href": "sections/installation",
            "internal": True,
            "title": "Installation",
        },
        {
            "href": "sections/structure",
            "internal": True,
            "title": "Struktur des Repos",
        },
        {
            "href": "sections/data",
            "internal": True,
            "title": "Data pipeline",
        },
        {
            "href": "sections/workflow",
            "internal": True,
            "title": "Workflow",
        },
        {
            "href": "sections/scenarios",
            "internal": True,
            "title": "Scenarios",
        },
    ],
    "heroes": {
        "index": "digipipe - Die Pipeline zum digitalen Planungsatlas Anhalt f√ºr die Region Anhalt-Bitterfeld-Wittenberg (ABW)",
        "sections/installation": "Installation",
        "sections/structure": "Struktur des Repos",
        "sections/data": "Data pipeline",
        "sections/workflow": "Workflow",
        "sections/scenarios": "Scenarios",
    },
    "version_dropdown": True,
    "version_json": "_static/versions.json",
    "version_info": {
        "Release": "https://bashtage.github.io/sphinx-material/",
        "Development": "https://bashtage.github.io/sphinx-material/devel/",
        "Release (rel)": "/sphinx-material/",
        "Development (rel)": "/sphinx-material/devel/",
    },
    "table_classes": ["plain"],
}


# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
# html_static_path = []

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}


# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = "digipipedoc"


# -- Options for LaTeX output ------------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',
    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',
    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',
    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}
